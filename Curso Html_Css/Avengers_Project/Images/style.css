*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
    text-decoration: none;
}
body{
    font-family: sans-serif;
}

header img {
    width: 180px;
}

header{
    background-color: #0a0a0a;
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    padding: 8px 24px;
    row-gap: 8px;
    column-gap: 24px;
    
}

nav ul{
    display: flex;
    gap: 25px;
}



/*Também podemos utilizar a margem no item para resolver o problema do espaçamento,no entanto se apenas aplicarmos a margem na esquerda
ele vai colocar uma margem desnecessária no primeiro item,pois não existe li antes dele,logo podemos escrever o código colocando um + li, pois isso
vai garantir que o css ponha margem apenas se essa li antecede de outra li.

ex:  

nav ul{
display: flex;
}

nav ul li + li {
    margin-left: 25px;
}

*/

header a {
    color: #f0ebeb;
    transition: 0.2s;
  
    
}

header a:hover{
    color: #f13239;
}

section h1{
    color: rgb(255, 246, 246);
}
.sectionImg{
    background-image: url(../Images/banner.jpg);
    background-size: cover; /*faz com que a imagem de fundo se adappte ao tamanho da tela*/
    background-position: center 25%; /*com essa propriedade mostramos aonde queremos que a imagem seja distribuida na tela, primeiro horizontalmente e depois verticalmente.
    
    Geralmente se usa muito center,left right, no entanto podemos utilizar porcentagem para ter um valor
    mais exato doque queremos fazer com a imagem, no caso dessa horizontalmente que a imagem priorize mostrar o centro e 25% da parte de cima*/
    height: 320px;
}

.gallery{
    max-width: 1200px;
    margin: 65px auto 0;
    padding: 0 25px;
}

.gallery h2 {
    margin-bottom: 30px;
    border-left: 4px solid red;
    padding-left: 8px;
}

.gallery{
    font-weight: bold;
}

.galleryRow{
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 25px;

}


.galleryRow article {
    /*
    flex grow - define se queremos que o item cresça o tamanho de acordo com a tela,caso queiramos que funcione pasta por 1,caso queremos desabilitar basta por 0.

      flex shrink - define se queremos que o item diminua de tamanho de acordo com a tela.

      flex basis  - define o tamanho base que queremos definir para o item.
      
      */
   flex: 1 1 250px;
  
}

 .galleryRow article img{
    width: 100%;
    border: 1px solid #0000008c;
    border-radius: 8px;
    margin-bottom: 16px;
}


.history{
    background-color: #0a0a0a;
    border-top: 1px solid red;
    margin: 64px auto 0px;
    padding: 92px 24px 0;
}

.history a {
    color: red;
    text-decoration: underline;
}

.history a:hover {
    color: #970f0f;
    transition: 0.2s;
}

.history .container {
    max-width: 75%;
    display: flex;
    flex-wrap: nowrap;
    margin: 0 auto 0;
    gap: 24px;
    align-items: center;
    border-bottom: 1px solid red;
}

@media(max-width: 720px){
    .history .container {
        max-width: 100%;
        flex-wrap: wrap;
    }
      
}


@media (max-width: 920px){
    .history .container {
        max-width: 100%;
    }

}


.history .container .col {
    flex: 1 1 350px;
}

.history .container .col img {
    width: 100%;
    display: block;
}

.history h2 {
    margin-bottom: 30px;
    border-left: 4px solid red;
    padding-left: 8px;
    color: #f0ebeb  ;
    
}

.history p {
    line-height: 1.5;
    color: #f0ebeb;
}

.history p + p {
    margin-top: 24px;
}

footer{
    background-color: #0a0a0a;
    color: #ebebeb;
    padding: 50px 24px;
    text-align: center;
    
}

footer a{
    color: red;
    text-decoration: underline;
}

footer a:hover {
    color: rgb(168, 9, 9);
}







